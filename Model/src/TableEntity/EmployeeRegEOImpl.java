package TableEntity;

import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 12 15:26:29 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmployeeRegEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        EmpId,
        EmpName,
        Password,
        ConfirmPassword,
        EmpEmailId,
        EmpPhnNo;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int EMPID = AttributesEnum.EmpId.index();
    public static final int EMPNAME = AttributesEnum.EmpName.index();
    public static final int PASSWORD = AttributesEnum.Password.index();
    public static final int CONFIRMPASSWORD = AttributesEnum.ConfirmPassword.index();
    public static final int EMPEMAILID = AttributesEnum.EmpEmailId.index();
    public static final int EMPPHNNO = AttributesEnum.EmpPhnNo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EmployeeRegEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("TableEntity.EmployeeRegEO");
    }


    /**
     * Gets the attribute value for EmpId, using the alias name EmpId.
     * @return the value of EmpId
     */
    public Number getEmpId() {
        return (Number) getAttributeInternal(EMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpId.
     * @param value value to set the EmpId
     */
    public void setEmpId(Number value) {
        setAttributeInternal(EMPID, value);
    }

    /**
     * Gets the attribute value for EmpName, using the alias name EmpName.
     * @return the value of EmpName
     */
    public String getEmpName() {
        return (String) getAttributeInternal(EMPNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpName.
     * @param value value to set the EmpName
     */
    public void setEmpName(String value) {
        setAttributeInternal(EMPNAME, value);
    }

    /**
     * Gets the attribute value for Password, using the alias name Password.
     * @return the value of Password
     */
    public String getPassword() {
        return (String) getAttributeInternal(PASSWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Password.
     * @param value value to set the Password
     */
    public void setPassword(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for ConfirmPassword, using the alias name ConfirmPassword.
     * @return the value of ConfirmPassword
     */
    public String getConfirmPassword() {
        return (String) getAttributeInternal(CONFIRMPASSWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for ConfirmPassword.
     * @param value value to set the ConfirmPassword
     */
    public void setConfirmPassword(String value) {
        setAttributeInternal(CONFIRMPASSWORD, value);
    }

    /**
     * Gets the attribute value for EmpEmailId, using the alias name EmpEmailId.
     * @return the value of EmpEmailId
     */
    public String getEmpEmailId() {
        return (String) getAttributeInternal(EMPEMAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpEmailId.
     * @param value value to set the EmpEmailId
     */
    public void setEmpEmailId(String value) {
        setAttributeInternal(EMPEMAILID, value);
    }

    /**
     * Gets the attribute value for EmpPhnNo, using the alias name EmpPhnNo.
     * @return the value of EmpPhnNo
     */
    public Number getEmpPhnNo() {
        return (Number) getAttributeInternal(EMPPHNNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpPhnNo.
     * @param value value to set the EmpPhnNo
     */
    public void setEmpPhnNo(Number value) {
        setAttributeInternal(EMPPHNNO, value);
    }


    /**
     * @param empName key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String empName) {
        return new Key(new Object[] { empName });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

